{"version":3,"sources":["components/UI/Card.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpenseList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpenseChart.js","components/Expenses/Expenses.js","components/NewExpenses/ExpenseForm.js","components/NewExpenses/NewExpenses.js","App.js","index.js"],"names":["Card","props","classes","className","children","ExpensesFilter","value","selected","onChange","event","onChangeFilter","target","ExpenseDate","month","date","toLocaleString","day","year","getFullYear","ExpenseItem","title","amount","ExpenseList","items","length","map","item","id","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","max","ExpensesChart","chartDataPoints","expenses","expense","getMonth","Expenses","useState","filteredYear","setFilteredYear","filteredExpenses","filter","toString","selectedYear","ExpenseChart","ExpenseForm","setTitle","setAmount","setDate","onSubmit","preventDefault","expenseData","Date","onSendingData","type","min","step","onClick","onCancel","NewExpenses","isEditing","setIsEditing","onSending","expenseDate","random","addNewExpense","DUMMY_EXPENSES","App","data","setData","console","log","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fccedc47.chunk.js","sourcesContent":["import \"./Card.css\";\r\n\r\nconst Card = (props) => {\r\n  const classes = \"card \" + props.className;\r\n  return <div className={classes}>{props.children}</div>;\r\n};\r\nexport default Card;\r\n","import React from \"react\";\r\n\r\nimport \"./ExpensesFilter.css\";\r\n\r\nconst ExpensesFilter = (props) => {\r\n  const dropdownChangeHandler = (event) => {\r\n    props.onChangeFilter(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"expenses-filter\">\r\n      <div className=\"expenses-filter__control\">\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={dropdownChangeHandler}>\r\n          <option value=\"2022\">2022</option>\r\n          <option value=\"2021\">2021</option>\r\n          <option value=\"2020\">2020</option>\r\n          <option value=\"2019\">2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;\r\n","import \"./ExpenseDate.css\";\r\n\r\nconst ExpenseDate = (props) => {\r\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\r\n  const day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\r\n  const year = props.date.getFullYear();\r\n  return (\r\n    <div className=\"expense-date\">\r\n      <div className=\"expense-date__month\">{month}</div>\r\n      <div className=\"expense-date__year\">{year}</div>\r\n      <div className=\"expense-date__day\">{day}</div>\r\n    </div>\r\n  );\r\n};\r\nexport default ExpenseDate;\r\n","//import React, { useState } from \"react\";\r\nimport \"./ExpenseItem.css\";\r\nimport ExpenseDate from \"./ExpenseDate\";\r\nimport Card from \"../UI/Card\";\r\nconst ExpenseItem = (props) => {\r\n  /*const [title, setTitle] = useState(props.title);\r\n   const clickHandeler = () => {\r\n    setTitle(\"updated\");\r\n    console.log(title);\r\n  };*/\r\n  return (\r\n    <li>\r\n      <Card className=\"expense-item\">\r\n        <ExpenseDate date={props.date} />\r\n        <div className=\"expense-item__description\">\r\n          <h2>{props.title}</h2>\r\n          <div className=\"expense-item__price\">${props.amount}</div>\r\n        </div>\r\n      </Card>\r\n    </li>\r\n  );\r\n};\r\nexport default ExpenseItem;\r\n","import React from \"react\";\r\nimport ExpenseItem from \"./ExpenseItem\";\r\nimport \"./ExpenseList.css\";\r\nconst ExpenseList = (props) => {\r\n  if (props.items.length === 0) { \r\n    return <h2 className=\"expenses-list__fallback\">No expenses found</h2>;\r\n  }\r\n  return (\r\n    <ul className=\"expenses-list\">\r\n      {props.items.map((item) => (\r\n        <ExpenseItem\r\n          title={item.title}\r\n          amount={item.amount}\r\n          date={item.date}\r\n          key={item.id}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\nexport default ExpenseList;\r\n","import React from \"react\";\r\nimport \"./ChartBar.css\";\r\nconst ChartBar = (props) => {\r\n  let barFillHeight = \"0%\";\r\n  if (props.maxValue > 0) {\r\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\r\n  }\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div\r\n          className=\"chart-bar__fill\"\r\n          style={{ height: barFillHeight }}\r\n        ></div>\r\n      </div>\r\n      <div className=\"chart-bar__label\">{props.label}</div>\r\n    </div>\r\n  );\r\n};\r\nexport default ChartBar;\r\n","import React from \"react\";\r\nimport ChartBar from \"./ChartBar\";\r\nimport \"./Chart.css\";\r\nconst Chart = (props) => {\r\n  const dataPointValues = props.dataPoints.map((dataPoint) => dataPoint.value);\r\n  const totalMaximum = Math.max(...dataPointValues);\r\n  return (\r\n    <div className=\"chart\">\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          key={dataPoint.label}\r\n          value={dataPoint.value}\r\n          label={dataPoint.label}\r\n          maxValue={totalMaximum}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\nexport default Chart;\r\n","import React from \"react\";\r\n\r\nimport Chart from \"../Chart/Chart\";\r\n\r\nconst ExpensesChart = (props) => {\r\n  const chartDataPoints = [\r\n    { label: \"Jan\", value: 0 },\r\n    { label: \"Feb\", value: 0 },\r\n    { label: \"Mar\", value: 0 },\r\n    { label: \"Apr\", value: 0 },\r\n    { label: \"May\", value: 0 },\r\n    { label: \"Jun\", value: 0 },\r\n    { label: \"Jul\", value: 0 },\r\n    { label: \"Aug\", value: 0 },\r\n    { label: \"Sep\", value: 0 },\r\n    { label: \"Oct\", value: 0 },\r\n    { label: \"Nov\", value: 0 },\r\n    { label: \"Dec\", value: 0 },\r\n  ];\r\n\r\n  for (const expense of props.expenses) {\r\n    const expenseMonth = expense.date.getMonth(); // starting at 0 => January => 0\r\n    chartDataPoints[expenseMonth].value += expense.amount;\r\n  }\r\n\r\n  return <Chart dataPoints={chartDataPoints} />;\r\n};\r\n\r\nexport default ExpensesChart;\r\n","import React, { useState } from \"react\";\r\nimport Card from \"../UI/Card\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport ExpenseList from \"./ExpenseList\";\r\nimport ExpenseChart from \"./ExpenseChart\";\r\nimport \"./Expenses.css\";\r\nconst Expenses = (props) => {\r\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\r\n  const filterChangeHandler = (selectedYear) => {\r\n    setFilteredYear(selectedYear);\r\n  };\r\n  const filteredExpenses = props.items.filter((expense) => {\r\n    return expense.date.getFullYear().toString() === filteredYear;\r\n  });\r\n  return (\r\n    <div>\r\n      <Card className=\"expenses\">\r\n        <ExpensesFilter\r\n          selected={filteredYear}\r\n          onChangeFilter={filterChangeHandler}\r\n        />\r\n        <ExpenseChart expenses={filteredExpenses} />\r\n        <ExpenseList items={filteredExpenses} />\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\nexport default Expenses;\r\n","import { React, useState } from \"react\";\r\nimport \"./ExpenseForm.css\";\r\nconst ExpenseForm = (props) => {\r\n  /*const [userInput, setUserInput] = useState({\r\n    title: \"\",\r\n    amount: \"\",\r\n    date: \"\",\r\n  });*/\r\n\r\n  const [title, setTitle] = useState(\"\");\r\n  const [amount, setAmount] = useState(\"\");\r\n  const [date, setDate] = useState(\"\");\r\n  const titleChangeHandler = (event) => {\r\n    setTitle(event.target.value);\r\n    //setUserInput({ ...userInput, title: event.target.value });\r\n    //setUserInput((prevState) => {\r\n    //   return { ...userInput, title: event.target.value };\r\n    // });\r\n  };\r\n  const amountChangeHandler = (event) => {\r\n    setAmount(event.target.value);\r\n    //setUserInput({ ...userInput, amount: event.target.value });\r\n    // setUserInput((prevState) => {\r\n    //    return { ...userInput, amount: event.target.value };\r\n    // });\r\n  };\r\n  const dateChangeHandler = (event) => {\r\n    setDate(event.target.value);\r\n    //setUserInput({ ...userInput, date: event.target.value });\r\n    // setUserInput((prevState) => {\r\n    //    return { ...userInput, date: event.target.value };\r\n    //   });\r\n  };\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    const expenseData = {\r\n      title: title,\r\n      amount: amount,\r\n      date: new Date(date),\r\n    };\r\n    props.onSendingData(expenseData);\r\n    //console.log(expenseData);\r\n    setTitle(\"\");\r\n    setDate(\"\");\r\n    setAmount(\"\");\r\n  };\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Title</label>\r\n          <input type=\"text\" onChange={titleChangeHandler} value={title} />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Amount</label>\r\n          <input\r\n            value={amount}\r\n            type=\"number\"\r\n            min=\"0.01\"\r\n            step=\"0.01\"\r\n            onChange={amountChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input\r\n            value={date}\r\n            type=\"date\"\r\n            min=\"2019-01-01\"\r\n            max=\"2022-12-31\"\r\n            onChange={dateChangeHandler}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"new-expense__actions\">\r\n        <button type=\"button\" onClick={props.onCancel}>\r\n          Cancel\r\n        </button>\r\n        <button type=\"submit\">Add Expense</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\nexport default ExpenseForm;\r\n","import React, { useState } from \"react\";\r\nimport \"./NewExpenses.css\";\r\nimport ExpenseForm from \"./ExpenseForm\";\r\nconst NewExpenses = (props) => {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const onSendingHandler = (onSending) => {\r\n    const expenseDate = {\r\n      ...onSending,\r\n      id: Math.random().toString(),\r\n    };\r\n    //console.log(expenseDate);\r\n    props.addNewExpense(expenseDate);\r\n    setIsEditing(false);\r\n  };\r\n  const startEditingHandler = () => {\r\n    setIsEditing(true);\r\n  };\r\n\r\n  const stopEditingHandler = () => {\r\n    setIsEditing(false);\r\n  };\r\n  return (\r\n    <div className=\"new-expense\">\r\n      {!isEditing && (\r\n        <button onClick={startEditingHandler}>Add New Expense</button>\r\n      )}\r\n      {isEditing && (\r\n        <ExpenseForm\r\n          onSendingData={onSendingHandler}\r\n          onCancel={stopEditingHandler}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default NewExpenses;\r\n","import { React, useState } from \"react\";\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpenses from \"./components/NewExpenses/NewExpenses\";\nconst DUMMY_EXPENSES = [\n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  {\n    id: \"e2\",\n    title: \"New TV show\",\n    amount: 799.49,\n    date: new Date(2021, 2, 12),\n  },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\nconst App = () => {\n  const [data, setData] = useState(DUMMY_EXPENSES);\n  const addNewExpenseHandler = (addNewExpense) => {\n    console.log(addNewExpense);\n    setData((prevExpenses) => {\n      return [addNewExpense, ...prevExpenses];\n    });\n  };\n  return (\n    <div>\n      <NewExpenses addNewExpense={addNewExpenseHandler} />\n      <Expenses items={data} />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}